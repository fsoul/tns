function getXmlHttp(){  var xmlhttp;  try {    xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");  } catch (e) {    try {      xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");    } catch (E) {      xmlhttp = false;    }  }  if (!xmlhttp && typeof XMLHttpRequest!='undefined') {    xmlhttp = new XMLHttpRequest();  }  return xmlhttp;}function ajax_get(url,success){	var xmlhttp = getXmlHttp();	xmlhttp.open('GET', url, true);	xmlhttp.setRequestHeader("Content-Type", "text/plain");	xmlhttp.onreadystatechange = function()	{		if (xmlhttp.readyState == 4 && xmlhttp.status == 200 && 'function' == typeof success)			success(xmlhttp.responseText);	}	xmlhttp.send(null);}function ajax_get_json(url,success){	var xmlhttp = getXmlHttp();	xmlhttp.open('GET', url, true);	xmlhttp.setRequestHeader("Content-Type", "text/json");	xmlhttp.onreadystatechange = function()	{		if (xmlhttp.readyState == 4 && xmlhttp.status == 200 && 'function' == typeof success) {			var resp; 			try {				resp = JSON.parse(xmlhttp.responseText);			}			catch(E) {				resp = E;			}			success(resp);		}	}	xmlhttp.send(null);}function overlay() {	el = document.getElementById("overlay");	el.style.visibility = (el.style.visibility == "visible") ? "hidden" : "visible";}function open_new_tab(href){    var a = document.createElement('a');    document.body.appendChild(a);    a.setAttribute('href', href);    a.setAttribute('target', "_blank");    a.dispatchEvent((function(e){        e.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, true, false, false, false, 0, null);        return e    }(document.createEvent('MouseEvents'))))}function get_plugin_id(cb_yes, cb_no) {    if (sessionStorage && ("initializing" === sessionStorage.getItem("AddonCMeterMain") || "initializing" === sessionStorage.getItem("AddonCMeter")) ) {        window.addEventListener("message", function AddonReady ( e ) {            if ("AddonCMeterReady" !== e.data){                return;            }            window.removeEventListener("message", AddonReady, false);            cb_yes(addonCMeter.PLID);            console.log('plid set_ '+addonCMeter.PLID);        }, false);    } else if (localStorage && ("initializing" === localStorage.getItem("AddonCMeterMain") || "initializing" === localStorage.getItem("AddonCMeter"))) {        window.addEventListener("message", function AddonReady ( e ) {            if ("AddonCMeterReady" !== e.data){                return;            }            window.removeEventListener("message", AddonReady, false);            cb_yes(addonCMeter.PLID);        }, false);    } else if ("addonCMeter" in window) {        // AddonCMeterReady event work in Chrome only so we need to check when window["IDCore"] appear        var count = 0;        function checkIDCore(){            if (typeof window["IDCore"] == 'undefined' && count < 3){                count++;                setTimeout(checkIDCore, 1000);                console.log('!!__ IDCore undefined');            } else {                cb_yes(addonCMeter.PLID);            }        }        checkIDCore();    } else if (typeof cb_no == 'function'){        cb_no();    }}